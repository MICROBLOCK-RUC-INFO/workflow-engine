server.port=8848
server.servlet.context-path=/nacos
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.max-wait=10000
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.max-active=15
## Validate the connection before borrowing it from the pool.
#spring.datasource.test-on-borrow=true
management.metrics.export.elastic.enabled=false
#management.metrics.export.elastic.host=http://localhost:9200
# metrics for influx
management.metrics.export.influx.enabled=false
#management.metrics.export.influx.db=springboot
#management.metrics.export.influx.uri=http://localhost:8086
#management.metrics.export.influx.auto-create-db=true
#management.metrics.export.influx.consistency=one
#management.metrics.export.influx.compressed=true
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D
# default current work dir
server.tomcat.basedir=
#fabric
db.num=1
db.url.0=${DB_URL}
db.user=${DB_USER:root}
db.password=${DB_PASSWORD:1234qwer}
fabric.username=${FABRIC_USERNAME:admin_cc_gfe}
fabric.mspid=${CORE_PEER_LOCALMSPID}
fabric.crtpath=${CORE_PEER_MSP_ADMINCERTS}
fabric.keypath=${CORE_PEER_MSP_KEYSTORE}
fabric.peertlspath=/etc/hyperledger/crypto/peer/tls/ca.crt
fabric.peername=${CORE_PEER_ID}
fabric.peerkeypath=/etc/hyperledger/crypto/peer/tls/server.key
fabric.peercrtpath=/etc/hyperledger/crypto/peer/tls/server.crt
fabric.peeraddr=grpcs://${CORE_PEER_ADDRESS}
fabric.orderername=${FABRIC_ORDERER_NAME}
fabric.ordereraddr=${FABRIC_ORDERER_ADDR}
fabric.ordererTlsPath=${ORDERER_TLS_PATH}