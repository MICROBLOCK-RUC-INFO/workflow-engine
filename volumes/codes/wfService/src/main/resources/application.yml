spring:
  application:
    # 应用名称
    name: monitor
  cloud:
    # 使用 Nacos 作为服务注册发现
    nacos:
      discovery:
        server-addr: ${NACOS_SERVER_ADDRESS:10.77.70.184:8848}
    # 使用 Sentinel 作为熔断器
    # 路由网关配置
    gateway:
      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
      discovery:
        locator:
          enabled: true
      # 配置路由规则
      routes:
        # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
        #        - id: NACOS-CONSUMER
        #          # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
        #          uri: lb://nacos-consumer
        #          # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
        - id: NACOS-BAIDU
          uri: http://www.baidu.com
          predicates:
            - Path=/baidu
            - Method=GET,POST

        - id: NACOS-CONSUMER-RIBBON
          uri: lb://consumer-ribbon
          predicates:
            - Path=/consumer-ribbon

        - id: NACOS-PROVIDER
          uri: lb://test1-100
          predicates:
            - Path=/helloworld/
            - Method=GET,POST

server:
  port: 8999
  tomcat:
    uri-encoding: UTF-8
    #最小线程数
    min-spare-threads: 100
    #最大线程数
    max-threads: 100
    #最大链接数
    max-connections: 10000
    #最大等待队列长度
    accept-count: 2000

management:
  endpoints:
    web:
      exposure:
        include: "*"

